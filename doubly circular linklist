#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node *next;
	struct node *prev; 
};
struct node *head,*tail,*newnode,*temp;
void create()
{
	head=0;
	tail=0;
	int choice=1;
	while(choice)
	{
		newnode=(struct node*)malloc(sizeof(struct node));
		printf("enter the data");
		scanf("%d",&newnode->data);
		newnode->next=0;
		newnode->prev=0;
		if(head==0)
		{
			head=tail=newnode;
			head->next=head;
			head->prev=head;
		}
		else
		{
			tail->next=newnode;
			newnode->prev=tail;
			newnode->next=head;
			head->prev=newnode;
			tail=newnode;
		}
	printf("enter 1 to contineu 0 to quit");
	scanf("%d",&choice);
	}
}
void display()
{
	temp=head;
	while(temp!=tail)
	{
		printf("%d\t",temp->data);
		temp=temp->next;
	}
	printf("%d\t",temp->data);
}
void insert_at_beginning()
{
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("enter the data");
	scanf("%d",&newnode->data);
	newnode->next=0;
	newnode->prev=0;
	newnode->next=head;
	newnode->prev=head;
	head=newnode;
}
void insert_at_end()
{
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("enter the data");
	scanf("%d",&newnode->data);
	newnode->next=0;
	newnode->prev=0;
	tail->next=newnode;
	newnode->prev=tail;
	tail=newnode;
}
void insert_at_specific_position()
{
	int i=1,pos;
	printf("enter the position to insert");
	scanf("%d",&pos);
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("enter the data");
	scanf("%d",&newnode->data);
	newnode->next=0;
	newnode->prev=0;
	temp=head;
	while(i<pos-1)
	{
		temp=temp->next;
		i++;
	}
	newnode->next=temp->next;
	temp->next=newnode;
	newnode->prev=temp;
	temp=newnode;
}
void delete_at_beginning()
{
	temp=head;
	head=head->next;
	head->prev=tail;
	tail->next=head;
	free(temp);
}
void delete_at_end()
{
	temp=tail;
	tail=tail->prev;
	tail->next=head;
	head->prev=tail;
	free(temp);
}
void delete_at_specific_position()
{
	int i=1,pos;
	printf("enter the position to delete");
	scanf("%d",&pos);
	temp=head;
	while(i<pos)
	{
		temp=temp->next;
		i++;
	}
	temp->prev->next=temp->next;
	temp->next->prev=temp->prev;
	if(temp->next==head)
	{
		tail=temp->prev;
		free(temp);
	}
	else
	{
		free(temp);
	}
}
int main()
{
	int choice;
    while (choice != 9)
    {
        printf("\npress 1 to create\npress 2 to insert at beginning\npress 3 to insert at end\npress 4 to insert at specific position\npress 5 to display\npress 6 to delete at beginning\npress 7 to delete at last\npress 8 to delete at specific positiom\npress 9 to quit\n");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            create();
            break;
        case 2:
            insert_at_beginning();
            break;
        case 3:
            insert_at_end();
            break;
        case 4:
            insert_at_specific_position();
            break;
        case 5:
            display();
            break;
        case 6:
            delete_at_beginning();
            break;
        case 7:
            delete_at_end();
            break;
        case 8:
            delete_at_specific_position();
            break;
        case 9:
	    return choice = 0;
            break;
        default:
            printf("invalid input");
            break;
        }
    }
}
